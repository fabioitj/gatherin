services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gatherin-frontend
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - gatherin-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gatherin-backend
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - gatherin-network

  database:
    image: "postgres:alpine"
    container_name: database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - gatherin_postgres_data:/var/lib/postgresql/data
    networks:
      - gatherin-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d myapp"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
    command: npx prisma migrate deploy
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    networks:
      - gatherin-network
    restart: "no"

networks:
  gatherin-network:
    driver: bridge

volumes:
  gatherin_postgres_data:
